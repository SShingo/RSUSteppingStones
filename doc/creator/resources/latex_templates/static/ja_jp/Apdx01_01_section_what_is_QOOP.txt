昨今のプログラミング言語--C++、C\#、Japa、Pythonなど--は「オブジェクト指向プログラミング」をサポートしている一方で、残念ながらSAS言語（SASマクロ言語）ではオブジェクト指向プログラミングは出来ません。

オブジェクト指向というといろいろ定義がありますが、そのうちの一つの要件が{\bfseries カプセル化}です。

{\bfseries クラス}を機能の塊が提供され、使用時にクラスを{\bfseries インスタンス化}します。
クラスには``メンバ関数''と``メンバ変数''が定義されており、それらはインスタンス毎に異なる実体であり、インスタンスが破棄されるまでインスタンス内に保持されます。
ユーザーはインスタンスのメンバ関数を使用したり、メンバ変数にアクセスします。

\subsubsection{通常のBase SASプログラミング vs. 疑似オブジェクト指向プログラミング}
\paragraph{例題}
\RDM では様々クラスを提供しています。
ここでは、そこから``カウンタークラス''を例に、\RDM における（疑似）オブジェクト指向プログラミングについて説明します。

カウンタークラスは、各種パラメータに従って、下記の式に従った数列を生成します。
\begin{equation}
\end{equation}
ここでは簡単に等差数列を返す場合を考えます。
この場合、必要なパラメータは初期値$a_0$と公差$b$で、等差数列の値$a_i$を取得するためには項番$i$が必要になります。
\begin{equation}
a_i = a_0 + b\cdot(i - 1)\quad(i = 1,\;2,\ldots)
\end{equation}

\paragraph{通常のBase SASプログラミング}

\paragraph{\RDM バージョン}
